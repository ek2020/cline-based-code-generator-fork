name: Release

on:
  push:
    branches: [dev, qa, uat, main]

jobs:
  release:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: vsix-package
      - name: Set environment variables
        run: |
          echo "PACKAGE_NAME=${{ env.PACKAGE_NAME }}" >> $GITHUB_ENV
          echo "BUILD_VERSION=${{ env.BUILD_VERSION }}" >> $GITHUB_ENV
          echo "BUILD_TAG=${{ env.BUILD_TAG }}" >> $GITHUB_ENV
      - name: Print environment
        run: |
          printenv
          echo "Package name - ${{ env.PACKAGE_NAME }}"
          echo "Release version - ${{ env.BUILD_VERSION }}"
          echo "Release tag - ${{ env.BUILD_TAG }}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}/${{ env.BUILD_TAG }}
          release_name: 'Release: ${{ github.ref_name }} (Version: ${{ env.BUILD_TAG }})'
          body: 'Release: ${{ github.ref_name }} (Version: ${{ env.BUILD_TAG }})'
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PACKAGE_NAME }}-${{ env.BUILD_VERSION }}.vsix
          asset_name: ${{ env.PACKAGE_NAME }}-${{ env.BUILD_VERSION }}.vsix
          asset_content_type: application/octet-stream
      - name: Set download URL
        run: |
          echo "DOWNLOAD_URL=${{ steps.create_release.outputs.html_url }}" >> $GITHUB_ENV
